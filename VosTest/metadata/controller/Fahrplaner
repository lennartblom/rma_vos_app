{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "db": [
            "null"
        ],
        "designer|userClassName": "Fahrplaner",
        "startOrt": [
            "{lat:0.0,lng:0.0}"
        ],
        "zielOrt": [
            "{lat:0.0,",
            "lng: 0.0}"
        ]
    },
    "name": "MyController",
    "configAlternates": {
        "zielOrt": "object",
        "startOrt": "object",
        "db": "object"
    },
    "designerId": "58f13f6b-eafa-4b74-b9dc-6b1ad6681e46",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "startOrt",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "zielOrt",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "db",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "MainView",
                "selector": "#MainView"
            },
            "name": "MainView",
            "designerId": "13ab4542-b9a3-4220-b83d-287b2e155967"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "fahrplanerBackButton",
                "selector": "#fahrplanerBackButton"
            },
            "name": "fahrplanerBackButton",
            "designerId": "c7b6cefc-1cee-4152-8cdf-bb2efc8d117f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#fahrplanerBackButton",
                "designer|targetType": "Ext.Button",
                "fn": "fahrplanerBackButton",
                "implHandler": [
                    "this.getFahrplanerView().hide();",
                    "this.getMainView().show();"
                ],
                "name": "tap"
            },
            "name": "fahrplanerBackButton",
            "designerId": "c2f2dc05-a9cc-4ca0-b990-83239b09ab4d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FahrplanerView",
                "selector": "#FahrplanerView"
            },
            "name": "FahrplanerView",
            "designerId": "df3bf0db-0393-4b7d-8d0c-1b004cf3a9b3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mybutton",
                "selector": "button#mybutton"
            },
            "name": "mybutton",
            "designerId": "45b698a7-2d84-461e-b11d-30dc02a52e28"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#mybutton",
                "designer|targetType": "Ext.Button",
                "fn": "storeTest",
                "implHandler": [
                    "this.stops.filter(\"id\", 250);"
                ],
                "name": "tap"
            },
            "name": "storeTest",
            "designerId": "186e2bc3-1083-41d2-8557-e7676e21d121"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "lineOne",
                "selector": "dataview#lineOne"
            },
            "name": "lineOne",
            "designerId": "d0bb6b69-cc7a-4985-986c-7029cf6058e9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "data"
                ],
                "fn": "getLines",
                "implHandler": [
                    "/*var len = data.length;",
                    "var content = '';",
                    "content += '<div class=\"busline\">';",
                    "",
                    "for(var i=0;i<len;i++){",
                    "    content += '<a href=\"#\">';",
                    "    content += data[i]['LineId'];",
                    "    content += '</a>';",
                    "",
                    "}",
                    "",
                    "content += '</div>';",
                    "",
                    "return content;*/"
                ]
            },
            "name": "getLines",
            "designerId": "1c7ac032-cde5-4bb5-8629-9ac71f1d2b8f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "lineTwo",
                "selector": "dataview#lineTwo"
            },
            "name": "lineTwo",
            "designerId": "63181ebe-f44e-4a3f-b1b0-1a8227df382d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#lineOne",
                "designer|params": [
                    "list",
                    "index",
                    "item",
                    "record"
                ],
                "designer|targetType": "MyList",
                "fn": "onLineOneItemTap",
                "implHandler": [
                    "",
                    "",
                    "/*var dataView = this.getLineTwo();",
                    "var linesData = record.get('lines');",
                    "//var quantity = linesArray.getCount();",
                    "",
                    "",
                    "",
                    "var myPanel = Ext.create('Ext.Panel', {",
                    "    html: \"<div class=\\\"buslineWrapper\\\"><div class=\\\"buslinesBoxLeft\\\"><div class=\\\"busIcon\\\" stlye=\\\"background-image:url(resources/images/icons/bus-icon-150x150.png)\\\"></div> \" + this.getLines(linesData) + \"</div><div class=\\\"buslinesBoxRight\\\">\"+ record.get('name')+ \"</div><div class=\\\"clearing\\\"></div></div>\"",
                    "});",
                    "",
                    "dataView.removeAll();",
                    "dataView.add([myPanel]);*/"
                ],
                "name": "itemtap"
            },
            "name": "onLineOneItemTap",
            "designerId": "833ccafe-2627-4af5-abbe-a869bfaa3c55"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield#searchfieldStart",
                "designer|targetType": "Ext.field.Search",
                "fn": "onFocusSearchfieldStart",
                "implHandler": [
                    "",
                    "//var searchTitle = Ext.getCmp('SearchTitle');",
                    "//searchTitle.setData({title:\"Start\"}); // Übergabe an das Label searchTitle",
                    "//console.log('Search Typ übergabe ::before');",
                    "this.getApplication().getController('searchViewController').searchType = 'start';",
                    "//console.log('Search Typ übergabe ::after');",
                    "this.getSearchView().show({type:\"slide\",direction:\"up\"});",
                    "this.getFahrplanerView().hide();"
                ],
                "name": "focus"
            },
            "name": "onFocusSearchfieldStart",
            "designerId": "d5aacebf-b760-4d1d-8650-b2a7b3fcc0a2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield#searchfieldDestination",
                "designer|targetType": "Ext.field.Search",
                "fn": "onFocusSearchfieldDestination",
                "implHandler": [
                    "//var searchTitle = Ext.getCmp('SearchTitle');",
                    "//searchTitle.setData({title:\"Ziel\"});  // Übergabe an das Label searchTitle",
                    "//console.log('Search Typ übergabe ::before');",
                    "this.getApplication().getController('searchViewController').searchType = 'destination';",
                    "//console.log('Search Typ übergabe ::after');",
                    "this.getSearchView().show({type:\"slide\",direction:\"up\"});",
                    "this.getFahrplanerView().hide();",
                    ""
                ],
                "name": "focus"
            },
            "name": "onFocusSearchfieldDestination",
            "designerId": "310bb6c0-26e5-4a68-870d-e0fc0945a83f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "searchView",
                "selector": "#searchView"
            },
            "name": "searchView",
            "designerId": "c2319d10-a84f-4b7f-971e-216bb389fa53"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "SearchTitle",
                "selector": "label#SearchTitle"
            },
            "name": "SearchTitle",
            "designerId": "bb7243c6-8851-410d-ad3d-63eb1cad31c0"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "",
                    "Ext.getStore('stops').load();",
                    "console.log(\"Store Stops wurde geladen.\");",
                    "this.dbcopy();",
                    "",
                    "",
                    "",
                    "",
                    "var db = window.sqlitePlugin.openDatabase(\"vosnavigator.db\");",
                    "this.setDb(db);",
                    "",
                    "",
                    "console.log(\"launcher Fahrplaner\");"
                ]
            },
            "name": "launch",
            "designerId": "c2fdac09-3266-40bc-973d-176d1be4d954"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "dbcopy",
                "implHandler": [
                    "",
                    "    window.plugins.sqlDB.copy(\"vosnavigator.db\",function(){",
                    "        console.log(\"db wurde erfolgreich kopiert\");},",
                    "        function(e){",
                    "         //db already exists or problem in copying the db file. Check the Log.",
                    "        console.log(\"Error Code = \"+JSON.stringify(e));",
                    "        //e.code = 516 => if db exists",
                    "        });",
                    ""
                ]
            },
            "name": "dbcopy",
            "designerId": "15ed7b0f-9b2c-4d69-8728-6a7bed6b3997"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mybutton4",
                "selector": "button#mybutton4"
            },
            "name": "mybutton4",
            "designerId": "15b0b405-71ab-4c65-b75d-cc145ac45007"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#mybutton4",
                "designer|targetType": "Ext.Button",
                "fn": "sucheVerbindung",
                "implHandler": [
                    "var searchView = this.getApplication().getController('searchViewController');",
                    "var sOrt = searchView.getStartOrt();",
                    "var zOrt = searchView.getZielOrt();",
                    "var db = this.getDb();",
                    "this.getCoordsStartZiel(sOrt,zOrt);",
                    "var startCoords = this.getStartOrt();",
                    "var zielCoord = this.getZielOrt();",
                    "var stationen = this.getEndstationen(1,sOrt,zOrt);",
                    "console.log(\"vars initialisiert\");",
                    "",
                    "/*",
                    "*",
                    "*",
                    "for(var i =0;i<stationen.length;i++){",
                    "    if(this.entfernung(startCoords,))",
                    "}",
                    "***/",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "var direction = this.showDirection(1,sOrt,zOrt);",
                    "var lines = this.showLines(sOrt, zOrt);",
                    "",
                    "console.log(sOrt);",
                    "console.log(zOrt);",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "sucheVerbindung",
            "designerId": "933cfe1b-931c-4b3a-9f58-fa805922697f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "startOrt",
                    "zielOrt"
                ],
                "fn": "entfernung",
                "implHandler": [
                    "var distance = 0.0;",
                    "var deltaX = 71.5 * (startOrt.lng-zielOrt.lng);",
                    "var deltaY = 111.3 * (startOrt.lat-zielOrt.lat);",
                    "var radius = this.getSliderValue();",
                    "if(deltaX!==0||deltaY!==0){",
                    "distance = Math.sqrt(deltaX*deltaX+deltaY*deltaY)*1000;",
                    "}",
                    "return distance;"
                ]
            },
            "name": "entfernung",
            "designerId": "ae924ec0-ca37-4468-a984-4a9b40db882e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "sOrt",
                    "zOrt"
                ],
                "fn": "getCoordsStartZiel",
                "implHandler": [
                    "this.setStartOrt(this.getCoords(sOrt));",
                    "this.setZielOrt(this.getCoords(zOrt));",
                    ""
                ]
            },
            "name": "getCoordsStartZiel",
            "designerId": "895babe2-043c-4f0e-8f71-77b60eb912cf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "sOrt",
                    "zOrt"
                ],
                "fn": "showLines",
                "implHandler": [
                    "var db = this.getDb();",
                    "db.transaction(function(tx) {",
                    "   tx.executeSql(\"Select lineId From stops, connections, lines Where stops.id = connections.stopId and connections.lineId=lines.id and stops.name = '\"+sOrt+\"' intersect Select lineId From stops, connections, lines Where stops.id = connections.stopId and connections.lineId = lines.id and stops.name = '\"+zOrt+\"';\", [], function(tx, res)",
                    "   {",
                    "        var length = res.rows.length;",
                    "        var lines = [];",
                    "        var j=0;",
                    "",
                    "        if(length===0){",
                    "            console.log(\"verbindung über neumarkt\");",
                    "        }else{",
                    "            for(var i =0; i<length;i++){",
                    "                lines[j++] = res.rows.item(i).lineId;",
                    "                console.log(\"linie \"+lines[j-1]);",
                    "",
                    "            }",
                    "            return lines;",
                    "        }",
                    "   });",
                    "",
                    "    }, function(e) {",
                    "      console.log(\"ERROR: \" + e.message);",
                    "    });"
                ]
            },
            "name": "showLines",
            "designerId": "35166c26-58f3-443c-be20-2356e804ee65"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "nummer",
                    "sOrt",
                    "zOrt"
                ],
                "fn": "showDirection",
                "implHandler": [
                    "var db = this.getDb();",
                    "db.transaction(function(tx) {",
                    "   tx.executeSql(\"Select direction\"+nummer+\" as direction From stops, connections, lines Where stops.id = connections.stopId and connections.lineId=lines.id and stops.name = '\"+sOrt+\"' intersect Select direction\"+nummer+\" as direction From stops, connections, lines Where stops.id = connections.stopId and connections.lineId = lines.id and stops.name = '\"+zOrt+\"';\", [], function(tx, res)",
                    "   {",
                    "        var length = res.rows.length;",
                    "        var direction = [];",
                    "        var j=0;",
                    "",
                    "",
                    "       for(var i =0; i<length;i++){",
                    "           direction[j++] = res.rows.item(i).direction;",
                    "           console.log(\"direction \"+direction[j-1]);",
                    "       }",
                    "       return direction;",
                    "",
                    "   });",
                    "",
                    "    }, function(e) {",
                    "      console.log(\"ERROR: \" + e.message);",
                    "    });"
                ]
            },
            "name": "showDirection",
            "designerId": "d3155402-cf02-4349-b759-b7094c34e932"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "nummer",
                    "sOrt",
                    "zOrt"
                ],
                "fn": "getEndstationen",
                "implHandler": [
                    "var db = this.getDb();",
                    "",
                    "db.transaction(function(tx) {",
                    "   var me = this;",
                    "   tx.executeSql(\"Select endstation\"+nummer+\" as endstation From stops, connections, lines Where stops.id = connections.stopId and connections.lineId=lines.id and stops.name = '\"+sOrt+\"' intersect Select endstation\"+nummer+\" as endstation From stops, connections, lines Where stops.id = connections.stopId and connections.lineId = lines.id and stops.name = '\"+zOrt+\"';\", [], function(tx, res)",
                    "   {",
                    "        var length = res.rows.length;",
                    "        var stationen = [];",
                    "        var j=0;",
                    "",
                    "        for(var i =0; i<length;i++){",
                    "            stationen[j++] = Ext.bind(me.stopIdToName(res.rows.item(i).endstation),me);",
                    "            console.log(\"Endstation \"+stationen[j-1]);",
                    "        }",
                    "        return stationen;",
                    "",
                    "   });",
                    "",
                    "    }, function(e) {",
                    "      console.log(\"ERROR: \" + e.message);",
                    "    });"
                ]
            },
            "name": "getEndstationen",
            "designerId": "ed11436e-1f5d-4666-a873-bafa10eb9e5d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "ort"
                ],
                "fn": "getCoords",
                "implHandler": [
                    "var db = this.getDb();",
                    "var coords = {lat:0.0,",
                    "              lng:0.0};",
                    "db.transaction(function(tx) {",
                    "   tx.executeSql(\"select lat from stops where name = '\"+ort+\"';\", [], function(tx, res) {",
                    "        coords.lat = res.rows.item(0).lat;",
                    "        console.log(ort+\" \"+coords.lat);",
                    "   });",
                    "   tx.executeSql(\"select long as lng from stops where name = '\"+ort+\"';\", [], function(tx, res) {",
                    "        coords.lng = res.rows.item(0).lng;",
                    "        console.log(ort+\" \"+coords.lng);",
                    "   });",
                    "   return coords;",
                    "",
                    "    }, function(e) {",
                    "      console.log(\"ERROR: \" + e.message);",
                    "    });"
                ]
            },
            "name": "getCoords",
            "designerId": "506a1d8d-20ae-4579-9dd3-bb2545393968"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id"
                ],
                "fn": "stopIdToName",
                "implHandler": [
                    "var db = this.getDb();",
                    "",
                    "db.transaction(function(tx) {",
                    "   tx.executeSql(\"Select name from stops where id=\"+id+\";\", [], function(tx, res)",
                    "   {",
                    "        return res.rows.item(0).name;",
                    "   });",
                    "",
                    "    }, function(e) {",
                    "      console.log(\"ERROR: \" + e.message);",
                    "    });"
                ]
            },
            "name": "stopIdToName",
            "designerId": "a61f64cf-67f8-47b1-817f-360e34658c99"
        }
    ]
}