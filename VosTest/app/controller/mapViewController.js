/*
 * File: app/controller/mapViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VosNavigator.controller.mapViewController', {
    extend: 'Ext.app.Controller',

    config: {
        percentProp: 0,

        refs: {
            achView: '#AchView',
            mapView: '#MapView',
            Percent: 'label#Percent'
        },

        control: {
            "button#scoreButton1": {
                tap: 'onButtonTap'
            },
            "map#mymap": {
                maprender: 'onMapMaprender'
            }
        }
    },

    onButtonTap: function(button, e, eOpts) {
        console.log("Zur√ºck");
        this.getMapView().hide();
        this.getAchView().show({type:"slide",direction:"right"});
    },

    onMapMaprender: function(map, gmap, eOpts) {
        var osnabrueck = new google.maps.LatLng(52.306474, 7.984980);


        var fp = this.getApplication().getController('Fahrplaner');
        var self = this;

        gmap.panTo(osnabrueck);

        console.log("Pan to OS");
        dataBaseActionGetVisited();
        console.log("Marker gesetzt.");


        /**
        *
        *
        *function
        *
        *
        **/


        function dataBaseActionGetVisited(){
            console.log("ich werde aufgerufen");
            var db = fp.getDb();
            var i=0;
            var length=0;
            var innerFeld;
            var speicherFeld=[];
            var redstation = new google.maps.MarkerImage("resources/images/icons/red_station.png", null, null, null, new google.maps.Size(25,25));
            var greenstation = new google.maps.MarkerImage("resources/images/icons/green_station.png", null, null, null, new google.maps.Size(25,25));
            var total = 0;
            var visited = 0;
            var notVisited = 0;

            db.transaction(function(tx) {
                //visited 0 == false :)
                tx.executeSql("select id, name, lat, long as lng, visited from stops;", [],
                              function(tx, res) {
                                  length = res.rows.length;

                                  for(i=0;i<length;i++){
                                      innerFeld = [];
                                      innerFeld[0]=res.rows.item(i).id;
                                      innerFeld[1]=res.rows.item(i).name;
                                      innerFeld[2]=res.rows.item(i).lat;
                                      innerFeld[3]=res.rows.item(i).lng;
                                      innerFeld[4]=res.rows.item(i).visited;
                                      speicherFeld[i]=innerFeld;
                                  }

                              },function(e){console.log("errror bei set Visited "+e.message);});
            },function(e){console.log(e.message+"getVisited successerror");},function(){
                console.log("getVisitedForMaps transaction successfull");
                length = speicherFeld.length;
                total = length;
                for(i=0;i<length;i++){
                    var stopPosition =  new google.maps.LatLng(speicherFeld[i][2], speicherFeld[i][3]);

                    if(speicherFeld[i][4]==1){
                        icon = greenstation;
                        visited++;
                    } else {
                        icon = redstation;
                        notVisited++;
                    }

                    var marker = new google.maps.Marker({
                        position: stopPosition,
                        map: gmap,
                        title: speicherFeld[i][1],
                        icon: icon
                    });
                }
                self.setPercentProp(Math.round(visited/(total/100)));
                console.log("Du hast bereits "+ self.getPercentProp() + "% des Busnetztes besucht...");


            });
        }












    }

});